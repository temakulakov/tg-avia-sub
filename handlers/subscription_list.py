from aiogram.utils.markdown import hbold, hitalic
from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from states.booking import Booking
from aiogram.fsm.context import FSMContext

router = Router()

@router.message(Command("subscription_list"))
async def cmd_subscription_list(message: types.Message, state: FSMContext):
    data = await state.get_data()
    subscriptions = data.get("subscribes", [])

    if not subscriptions:
        await message.answer("üóÇ –ü–æ–¥–ø–∏—Å–æ–∫ –Ω–µ—Ç. –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üò¢")
        return

    for i, sub in enumerate(subscriptions, start=1):
        one_way_text = "–¢—É–¥–∞-–æ–±—Ä–∞—Ç–Ω–æ" if sub.get("one_way") == "–î–∞" else "–í –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É"

        text = f"""
        üì¶ <b>–ü–æ–¥–ø–∏—Å–∫–∞ #{i}</b>
        "{hbold('–û—Ç–∫—É–¥–∞')}: {sub['origin'][0]} ({sub['origin'][1]})"
        "{hbold('–ö—É–¥–∞')}: {sub['destination'][0]} ({sub['destination'][1]})"
        <b>–í—ã–ª–µ—Ç:</b> {sub.get("departure_at")}
        <b>–¢–∏–ø –±–∏–ª–µ—Ç–∞:</b> {one_way_text}
        {f"<b>–í–æ–∑–≤—Ä–∞—Ç:</b> {sub.get('departure_to')}" if one_way_text == "–¢—É–¥–∞-–æ–±—Ä–∞—Ç–Ω–æ" else ""}
        <b>–í–∞–ª—é—Ç–∞:</b> {sub.get("currency", "rub")}
        """.strip()

        await message.answer(text, parse_mode="HTML")

